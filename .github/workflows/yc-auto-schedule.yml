name: YC Dev VM Auto-schedule

on:
  workflow_dispatch:
    inputs:
      action:
        description: start|stop
        required: true
        default: "stop"
  schedule:
    - cron: "0 17 * * 1-5"   # 17:00 UTC = 20:00 Europe/Helsinki
    - cron: "0 6  * * 1-5"   # 06:00 UTC = 09:00 Europe/Helsinki

permissions:
  contents: read

jobs:
  control:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      YC_CLOUD_ID: ${{ secrets.YC_CLOUD_ID }}
      YC_FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}
      YC_ZONE: ${{ secrets.YC_ZONE }}
      YC_SA_KEY_JSON: ${{ secrets.YC_SA_KEY_JSON }}
    steps:
      - name: Setup yc & jq
        run: |
          set -euo pipefail
          sudo apt-get update -y && sudo apt-get install -y jq
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "${HOME}/yandex-cloud/bin" >> $GITHUB_PATH
          echo "$YC_SA_KEY_JSON" > sa.json
          yc config profile create gha-auto || true
          yc config profile activate gha-auto
          yc config set service-account-key sa.json
          yc config set cloud-id "$YC_CLOUD_ID"
          yc config set folder-id "$YC_FOLDER_ID"
          yc config set compute-default-zone "$YC_ZONE"
      - name: Decide action
        id: act
        run: |
          A="${{ github.event.inputs.action || '' }}"
          if [ -z "$A" ]; then H=$(date -u +%H); [ "$H" = "06" ] && A=start || A=stop; fi
          echo "action=$A" >> $GITHUB_OUTPUT; echo "Action: $A"
      - name: List target instances (env=dev, autostop=true) & apply
        run: |
          yc compute instance list --format json > /tmp/instances.json
          jq -r '.[] | select(.labels.env=="dev" and .labels.autostop=="true") | "\(.id) \(.name) \(.status)"' /tmp/instances.json | tee /tmp/targets.txt
          A="${{ steps.act.outputs.action }}"; [ -s /tmp/targets.txt ] || { echo "No dev autostop instances"; exit 0; }
          while read -r ID NAME STATUS; do
            if [ "$A" = "stop" ] && [ "$STATUS" != "STOPPED" ]; then yc compute instance stop --id "$ID"; fi
            if [ "$A" = "start" ] && [ "$STATUS" != "RUNNING" ]; then yc compute instance start --id "$ID"; fi
          done < /tmp/targets.txt
      - name: Summary
        if: always()
        run: |
          echo "### YC Dev VM Auto-schedule" >> $GITHUB_STEP_SUMMARY
          echo "- Action: **${{ steps.act.outputs.action }}**" >> $GITHUB_STEP_SUMMARY
