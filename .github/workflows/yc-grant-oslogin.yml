name: YC Grant OS Login (for local SSH)

on:
  workflow_dispatch:
    inputs:
      subject_type:
        description: "yandexPassportUserAccount"
        default: "yandexPassportUserAccount"
        required: true
      subject:
        description: "user id | login | email"
        required: true
      role:
        description: "Role to grant (compute.osLogin or compute.osAdminLogin)"
        default: "compute.osLogin"
        required: true

permissions:
  contents: read

jobs:
  grant:
    runs-on: ubuntu-latest
    steps:
      - name: Install yc CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> "$GITHUB_PATH"
      - name: Auth as service account
        env:
          YC_SA_KEY_JSON: ${{ secrets.YC_SA_KEY_JSON }}
          YC_CLOUD_ID: ${{ secrets.YC_CLOUD_ID }}
          YC_FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}
        run: |
          printf "%s" "$YC_SA_KEY_JSON" > key.json
          yc config profile create ci
          yc config set service-account-key key.json
          yc config set cloud-id "$YC_CLOUD_ID"
          yc config set folder-id "$YC_FOLDER_ID"
      - name: Resolve user id
        id: resolve
        env:
          SUBJECT: ${{ inputs.subject }}
        run: |
          set -euo pipefail
          # Try direct by id/login/email
          UID=$(yc iam user-account get "$SUBJECT" --format json 2>/dev/null | jq -r '.id' || true)
          if [[ -z "${UID:-}" ]]; then
            echo "Could not resolve user with 'yc iam user-account get'. If user is federated org user, pass its user ID." >&2
            exit 1
          fi
          echo "uid=$UID" >> "$GITHUB_OUTPUT"
      - name: Grant role on folder
        env:
          ROLE: ${{ inputs.role }}
          FOLDER: ${{ secrets.YC_FOLDER_ID }}
          UID: ${{ steps.resolve.outputs.uid }}
        run: |
          yc resource-manager folder add-access-binding "$FOLDER" \
            --role "$ROLE" \
            --subject "userAccount:${UID}"
      - name: Show bindings
        env:
          FOLDER: ${{ secrets.YC_FOLDER_ID }}
        run: yc resource-manager folder list-access-bindings "$FOLDER" --format yaml | sed -e 's/private_key: .*/private_key: REDACTED/'
