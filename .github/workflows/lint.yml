---
name: linters
on:
  pull_request:
  push:
    branches:
      - main
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  shell-yaml-actions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: ShellCheck
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y shellcheck
          git ls-files '*.sh' | xargs -r shellcheck -S warning
      - name: shfmt (diff only)
        run: |
          set -euo pipefail
          if ! command -v shfmt >/dev/null 2>&1; then
            if sudo apt-get update -y && sudo apt-get install -y shfmt; then
              echo "shfmt installed via apt"
            else
              echo "apt shfmt not available, fallback to direct binary"
              OS="$(uname -s | tr '[:upper:]' '[:lower:]')"
              ARCH="$(uname -m)"
              case "$ARCH" in
                x86_64|amd64) ARCH="x86_64" ;;
                aarch64|arm64) ARCH="arm64" ;;
              esac
              URL="https://github.com/mvdan/sh/releases/latest/download/shfmt_${OS}_${ARCH}"
              curl -fsSL "$URL" -o /tmp/shfmt
              sudo install -m 0755 /tmp/shfmt /usr/local/bin/shfmt
              echo "shfmt installed via curl binary"
            fi
          fi
          shfmt -d .
      - name: yamllint
        run: |
          set -euo pipefail
          sudo apt-get install -y yamllint || python3 -m pip install --user --no-cache-dir yamllint
          export PATH="$HOME/.local/bin:$PATH"
          yamllint .
      - name: actionlint
        run: |
          set -euo pipefail
          OS="$(uname -s | tr '[:upper:]' '[:lower:]')"
          ARCH="$(uname -m)"
          case "$ARCH" in
            x86_64|amd64) ARCH="amd64" ;;
            aarch64|arm64) ARCH="arm64" ;;
          esac
          URL="https://github.com/rhysd/actionlint/releases/latest/download/actionlint_${OS}_${ARCH}.tar.gz"
          curl -fsSL "$URL" | sudo tar -xz -C /usr/local/bin actionlint || {
            echo "(fallback) install via go"; \
            sudo apt-get update -y && sudo apt-get install -y golang-go || true; \
            GOBIN=/usr/local/bin go install github.com/rhysd/actionlint/cmd/actionlint@latest || true; }
          actionlint -oneline
