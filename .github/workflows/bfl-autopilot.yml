name: BFL Autopilot Deploy
on:n  push:n    branches: [ main ]n  workflow_dispatch:nnjobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - uses: actions/checkout@v4

      - name: Install prerequisites on runner
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync jq

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/bfl_ed25519
          chmod 600 ~/.ssh/bfl_ed25519
          ssh-keyscan -p "${{ secrets.SSH_PORT }}" "${{ secrets.VM_HOST }}" >> ~/.ssh/known_hosts

      - name: Prepare VM (docker/compose, rsync, /opt/bfl, node fallback, small swap)
        run: |
          ssh -i ~/.ssh/bfl_ed25519 -p "${{ secrets.SSH_PORT }}" ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} 'bash -lc "
            set -euo pipefail
            sudo apt-get update
            sudo apt-get install -y ca-certificates curl gnupg jq rsync git make
            if ! command -v docker >/dev/null 2>&1; then
              install -m0755 -d /etc/apt/keyrings
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
              . /etc/os-release
              echo \"deb [arch=\$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \$VERSION_CODENAME stable\" | sudo tee /etc/apt/sources.list.d/docker.list >/dev/null
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
              sudo usermod -aG docker $USER || true
            fi
            docker compose version >/dev/null 2>&1 || sudo apt-get install -y docker-compose-plugin
            command -v node >/dev/null 2>&1 || sudo apt-get install -y nodejs npm || true
            sudo mkdir -p /opt/bfl && sudo chown -R $USER:$USER /opt/bfl
            if ! swapon --show | grep -q swapfile-ci; then
              sudo fallocate -l 2G /swapfile-ci || true
              sudo chmod 600 /swapfile-ci || true
              sudo mkswap /swapfile-ci || true
              sudo swapon /swapfile-ci || true
            fi
          "'

      - name: Clean caches on VM (safe)
        run: |
          ssh -i ~/.ssh/bfl_ed25519 -p "${{ secrets.SSH_PORT }}" ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} 'bash -lc "
            set -euo pipefail
            rm -rf /opt/bfl/**/.pnpm-store /opt/bfl/**/node_modules /opt/bfl/**/dist /opt/bfl/**/build 2>/dev/null || true
          "'

      - name: Rsync sources to VM (delete-excluded + force)
        run: |
          RSYNC_SSH="ssh -i ~/.ssh/bfl_ed25519 -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=yes"
          rsync -az --delete --delete-excluded --force \
            --exclude '.git' \
            --exclude '.github' \
            --exclude 'node_modules' \
            --exclude '.pnpm-store' \
            --exclude 'dist' \
            --exclude 'build' \
            -e "$RSYNC_SSH" ./ ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:/opt/bfl/

      - name: Build UI (if present; best-effort)
        run: |
          ssh -i ~/.ssh/bfl_ed25519 -p "${{ secrets.SSH_PORT }}" ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} 'bash -lc "
            set -euo pipefail
            if [ -f /opt/bfl/services/ui/package.json ]; then
              cd /opt/bfl/services/ui
              npm ci || npm install --no-fund --no-audit
              npm run -s build || true
            fi
          "'

      - name: Compose up + rebuild
      - name: Free port 8000 before compose
        run: |
          ssh -i ~/.ssh/bfl_ed25519 -p "${{ secrets.SSH_PORT }}" ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} 'bash -lc "
            set -euo pipefail
            echo == BEFORE ==; (ss -ltnp | grep :8000 || true)
            IDS=$(docker ps --format '\''{{.ID}} {{.Ports}}'\'' | awk '\''$0 ~ /:8000->/ {print $1}'\'')
            [ -n \"${IDS:-}\" ] && docker stop $IDS || true
            IDS_ALL=$(docker ps -a --format '\''{{.ID}} {{.Ports}}'\'' | awk '\''$0 ~ /:8000->/ {print $1}'\'')
            [ -n \"${IDS_ALL:-}\" ] && docker rm -f $IDS_ALL || true
            command -v fuser >/dev/null 2>&1 && sudo fuser -k 8000/tcp || true
            echo == AFTER ==; (ss -ltnp | grep :8000 || true)
          "'
      - name: Compose up + rebuild
        run: |
          ssh -i ~/.ssh/bfl_ed25519 -p "${{ secrets.SSH_PORT }}" ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} 'bash -lc "
            set -euo pipefail
            cd /opt/bfl
            docker compose pull || true
            docker compose up -d --build
            docker compose ps
          "'

      - name: Smoke checks
        run: |
          ssh -i ~/.ssh/bfl_ed25519 -p "${{ secrets.SSH_PORT }}" ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} 'bash -lc "
            set -euo pipefail
            echo == HEALTH ==
            curl -fsS http://127.0.0.1:8000/api/health | jq .
            echo == METRICS ==
            curl -fsS http://127.0.0.1:8000/metrics | head -n 20
          "'
