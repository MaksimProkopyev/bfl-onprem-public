name: YC OS Login Profile Create (Codex-first)
on:
  workflow_dispatch:
    inputs:
      organization_id: { description: "YC organization id", required: true }
      subject_type:    { description: "serviceAccount | yandexPassportUserAccount", required: true }
      subject:         { description: "SA id | user id | login | email", required: true }
      os_login:        { description: "OS login (Linux user)", default: "yc-user", required: true }
      uid:             { description: "POSIX uid", default: "20000", required: true }
permissions: { contents: read }
jobs:
  create:
    runs-on: ubuntu-latest
    steps:
      - name: Install yc CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> "$GITHUB_PATH"
      - name: Auth as service account
        env:
          YC_SA_KEY_JSON: ${{ secrets.YC_SA_KEY_JSON }}
          YC_CLOUD_ID:    ${{ secrets.YC_CLOUD_ID }}
          YC_FOLDER_ID:   ${{ secrets.YC_FOLDER_ID }}
        run: |
          printf "%s" "$YC_SA_KEY_JSON" > key.json
          yc config profile create ci
          yc config set service-account-key key.json
          yc config set cloud-id "$YC_CLOUD_ID"
          yc config set folder-id "$YC_FOLDER_ID"
      - name: Prepare SUBJECT_ID
        id: prep
        shell: bash
        env:
          ORG:     ${{ inputs.organization_id }}
          SUBJ_T:  ${{ inputs.subject_type }}
          SUBJ:    ${{ inputs.subject }}
        run: |
          set -euo pipefail
          # 1) Если уже ID для YP-аккаунта (20 симв. a-z0-9) — берём как есть
          if [[ "$SUBJ_T" == "yandexPassportUserAccount" && "$SUBJ" =~ ^[a-z0-9]{20}$ ]]; then
            echo "sid=$SUBJ" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          # 2) Для serviceAccount всегда передаём ID как есть
          if [[ "$SUBJ_T" == "serviceAccount" ]]; then
            echo "sid=$SUBJ" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          # 3) Иначе — резолвим email/login/ID в id через список пользователей организации
          SID="$(yc organization-manager user list --organization-id "$ORG" --format json \
            | jq -r --arg q "$SUBJ" '
                .[]?
                | select(
                    (.yandex_passport_user_account.default_email // "") == $q or
                    (.yandex_passport_user_account.login // "") == $q or
                    (.id // "") == $q
                  )
                | .id' | head -n1 || true)"
          if [[ -z "${SID:-}" ]]; then
            echo "Could not resolve user id for: $SUBJ" >&2
            exit 1
          fi
          echo "sid=$SID" >> "$GITHUB_OUTPUT"
      - name: Create OS Login profile
        run: |
          yc organization-manager oslogin profile create \
            --organization-id "${{ inputs.organization_id }}" \
            --subject-id "${{ steps.prep.outputs.sid }}" \
            --login "${{ inputs.os_login }}" \
            --uid "${{ inputs.uid }}"
      - name: Dump profile info
        run: |
          yc organization-manager oslogin profile get \
            --organization-id "${{ inputs.organization_id }}" \
            --subject-id "${{ steps.prep.outputs.sid }}" \
            --format yaml | tee oslogin-profile-create.yaml
      - uses: actions/upload-artifact@v4
        with: { name: oslogin-profile-create, path: oslogin-profile-create.yaml }
