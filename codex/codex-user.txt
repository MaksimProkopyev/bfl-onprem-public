Исходные данные:
- ORG_ID: bpfdkn227rbkv9ov9tlo; cloud-id: b1g0r1ratit5lvjmi68o; folder-id (bfl): b1gj6os8m6vmq2l7gbc2
- GitHub: MaksimProkopyev/bfl-onprem; ключ: ~/.ssh/bfl_ed25519(.pub); ВМ user: bfl; каталог: /opt/bfl

Что уже сделано:
- Репо: services/api/app/main.py (health, metrics bfl_autopilot_*, SPA-fallback), services/api/Dockerfile, docker-compose.yml (api 8000:8000, volume ./services/ui/dist), services/ui/vite.config.ts (base '/autopilot/', proxy→127.0.0.1:8000), .github/workflows/bfl-autopilot.yml (prepare VM, free 8000, rsync, optional UI build, compose up, smokes). Secrets: VM_HOST, VM_USER=bfl, SSH_PORT=22, SSH_PRIVATE_KEY. На ВМ порт 8000 мог конфликтовать — чистить.

Задача:
0) При PermissionDenied на VPC — правки или обход (default/Multipass), затем продолжить.
1) Проверить/создать: подсеть bfl-subnet-a (ru-central1-a, 10.10.0.0/24), SG(22/tcp), SSH к ВМ bfl-onprem.
2) Настроить локальный SSH-алиас bfl-onprem по IP из `yc compute instance get --name bfl-onprem`.
3) Запустить деплой через Actions «BFL Autopilot Deploy» (или вручную): rsync → compose up -d (пересборка api).
4) Туннель и смоки:
   - curl 127.0.0.1:8000/api/health → {"ok":true}
   - curl 127.0.0.1:8000/metrics | grep '^bfl_autopilot_'
   - открыть http://127.0.0.1:8000/autopilot
5) Если 8000 занят — зачистить слушателей (docker+процессы) и повторить compose.
6) В ответе: только идемпотентные zsh-команды + «Проверка». При ошибке — краткая диагностика и fix one-liner.
7) Приложить (если нет) полный vite.config.ts и FastAPI SPA-патч (mount /autopilot/assets + fallback /autopilot/*).

Ожидания: docker compose ps → api Up 0.0.0.0:8000->8000; /api/health → {"ok":true}; /metrics содержит bfl_autopilot_*; /autopilot открывается (или placeholder).
